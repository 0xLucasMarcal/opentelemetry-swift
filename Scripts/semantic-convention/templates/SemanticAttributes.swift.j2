// Copyright 2020, OpenTelemetry Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// DO **NOT** EDIT. This file is automatically generated.

{%- macro to_swift_return_type(type) -%}
  {%- if type == "string" -%}
    String
  {%- elif type == "string[]" -%}
    [String]
  {%- elif type == "boolean" -%}
    Bool
  {%- elif type == "number" -%}
    Int
  {%- else -%}
    {{type}}
  {%- endif -%}
{%- endmacro %}

import Foundation

public enum {{enum}}: String {

    {%- for attribute in attributes | unique(attribute="fqn") %}
    /**
    {{attribute.brief | to_doc_brief}}.
    {%- if attribute.examples %}

    ~~~
    // Examples
    {%- for example in attribute.examples %}
    {%- if attribute.attr_type|lower == "string" %}
    attributes[.{{attribute.fqn | to_camelcase}}] = "{{example | replace("\"", "\\\"")}}"
    {%- else -%}
    attributes[.{{attribute.fqn | to_camelcase}}] = {{example}}
    {%- endif -%}
    {%- endfor %}
    ~~~
    {%- endif %}
    {%- if attribute.note %}

    - Note: {{attribute.note | to_doc_brief | indent(6, True, indentfirst=False)}}.
    {%- endif %}
    {%- if attribute.deprecated %}

    - Warning: Deprecated â€¢ {{attribute.deprecated | to_doc_brief}}.
    {%- endif %}

    - Requires: Value type should be `{{to_swift_return_type(attribute.attr_type|lower)}}`
    */
    {%- if attribute.deprecated %}
    @available(*, deprecated)
    {%- endif %}
    case {{attribute.fqn | to_camelcase}} = "{{attribute.fqn}}"
    {%- endfor %}

    {%- if enum == "SemanticAttributes" %}

    // MARK: - Manual Definitions
    // Some definitions have not yet been added to the YAML which generates this script.
    // As such as we have some manually defined cases.

    /**
    An exception event **MUST** be called "exception" as per the [specification](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/exceptions.md).
    */
    case exception = "exception";
    {% endif %}
}

{%- if enum == "ResourceConstants" %}
public func ==(left: ResourceConstants, right: String) -> Bool {
    return left.rawValue == right
}

public func ==(left: String, right: ResourceConstants) -> Bool {
    return left == right.rawValue
}
{% endif %}